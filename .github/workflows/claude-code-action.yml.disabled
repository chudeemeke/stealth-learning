name: Claude Code Action

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task for Claude to perform'
        required: false
        type: string

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  claude-code-action:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.body, '@claude')) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Claude Code Action Official
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          model: claude-3-opus-20240229
          max_tokens: 4096
          temperature: 0.2
          system_prompt: |
            You are Claude Code, an expert software engineer helping with the Stealth Learning Games project.
            This is an educational platform for children aged 3-9 with games for Mathematics, English, and Science.

            Key project guidelines:
            - This project uses pnpm exclusively (never npm or yarn)
            - Follow AAA+ game standards for UI/UX (comparable to Duolingo/LingoKids)
            - Ensure WCAG AAA accessibility compliance
            - Maintain child-friendly interfaces with no browser popups
            - Ensure parent authentication security is never bypassed
            - All implementations must be comprehensive (no stubs or placeholders)

            When fixing TypeScript errors:
            - Preserve all functionality
            - Maintain type safety
            - Follow existing code patterns

            When implementing features:
            - Create engaging, animated, child-friendly interfaces
            - Use Framer Motion for animations
            - Follow the existing component structure
            - Ensure mobile responsiveness

          # Configuration for different event types
          on_issue_opened: true
          on_issue_comment: true
          on_pull_request: true

          # Auto-fix configuration
          auto_fix_typescript_errors: true
          auto_fix_lint_errors: true
          auto_implement_features: true
          auto_review_code: true

          # Project-specific settings
          package_manager: pnpm
          node_version: '20'
